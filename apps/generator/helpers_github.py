# -*- encoding: utf-8 -*-
"""
Copyright (c) 2019 - present AppSeed.us
"""

import os, random, string
from github import Github

from .common   import *
from .helpers  import *

def repo_create( SRC_DIR, aRepoName=None ):

    files = list_files( SRC_DIR )

    v_GH_REPO  = random.choice(list( GH_CREDENTIALS )) # GH_ACCOUNT # from .common
    v_GH_TOKEN = GH_CREDENTIALS[ v_GH_REPO ]           # GH_TOKEN   # from .common

    if not v_GH_REPO or not v_GH_TOKEN:
        print(' > GH Credentials not found, exit')
        return None

    # Check input
    if aRepoName:
        aRepoName = 'django-' + aRepoName
    else:    
        aRepoName = 'rocket-django-' + h_random_ascii(5)

    g = Github( v_GH_TOKEN )
    user = g.get_user()
    repo = user.create_repo( aRepoName, description='Django Starter - Generated by Rocket Django | AppSeed ' )

    REPO_URL = v_GH_REPO + aRepoName 

    print( '*** Create GIT Repo = ' + REPO_URL ) 

    idx = 1
    for f in files:

        # Report Status
        if idx % 10 == 0:

            task_completion = int( ( idx * 100 ) / len( files ) )
            print( '  >>> uploaded [' + str(task_completion) + '%] - ' + str( len ( files) ) + ' files (total)' )

        idx += 1

        # Fix for Windows     
        f = f.replace('\\', '/')
        # print( '*** > ['+str( idx )+'] Add file ' + f )

        f_path = os.path.join( SRC_DIR, f )
        repo.create_file( f, "initial commit", file_load( f_path ) )

    print( '  ...done' ) 
    return REPO_URL
