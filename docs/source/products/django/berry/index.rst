:og:description: Django Berry - Open-Source Django Template
:og:image: https://app-generator.dev/static/product/berry-dashboard/django/top.png
:og:image:alt: Django Berry - Open-Source Django Template

`Berry </product/berry-dashboard/django/>`__
===================================================

.. title:: Django Berry - Open-Source Django Template 
.. meta::
    :description: Open-Source Django Template crafted on top of Berry Dashboard Design
    :keywords: django, starter, django template, berry design, berry dashboard, berry free dashboard, bootstrap 5, django template

**Open-Source Django Template** built with a minimum set of features on top of **Berry**, a modern dashboard design from CodedThemes. 
This template can be used to start a new project quickly by adding new features on top of the existing ones or simply for learning purposes.

- ðŸ‘‰ `Berry Django </product/berry-dashboard/django/>`__ - `Product page` 
- ðŸ‘‰ `Berry Django <https://django-berry.onrender.com/>`__ - `LIVE demo` 

Features 
--------

- Bootstrap 5 Styling 
- Session-based Authentication
- DB Persistence: SQLite
- Docker 
- CI/CD integration for Render 

.. figure:: https://user-images.githubusercontent.com/51070104/215728710-d1ee7fef-8153-402b-9741-371e1c01cd36.png
   :alt: Django Berry Dashboard - Open-Source Seed project generated by AppSeed.

Prerequisites
-------------

A few tools need to be installed in the system to use the starter efficiently:

- `Python <https://www.python.org/>`__ 
- A modern code editor like `VsCode <https://code.visualstudio.com/>`__, or `Sublime <https://www.sublimetext.com/>`__
- (optional) `GIT <https://git-scm.com/>`__ - for pulling the source code and work under a version control system 
- (optional) `Docker <https://www.docker.com/>`__ for isolated execution 
- (optional) DB Servers: 
  - `MySql <https://www.mysql.com/>`__ 
  - `PostgreSQL <https://www.postgresql.org/>`__ 


Download Sources 
----------------

The **product can be downloaded** from the official page or directly from GitHub by accessing the repository:

- `Product Page </product/berry-dashboard/django/>`__ - requires `authentication </users/signin/>`__
- `Berry Django <https://github.com/app-generator/django-berry-dashboard>`__ - GitHub Repository (public)

To download the sources from GitHub using GIT, open a terminal and execute a **git clone** command. 
Once the download is complete, the project can be opened in VsCode. 

.. code-block:: bash

    git clone https://github.com/app-generator/django-berry-dashboard.git   # Download sources from GitHub
    code django-berry-dashboard                                             # Open project in VsCode  

Start in Docker 
---------------

Te fastest way to see the product running in the browser is to start Django Datta Able in Docker: 

.. code-block:: bash  

    docker-compose up --build 

If Docker is properly installed in the system, you can visit the browser at **http://localhost:5085**. Datta Able should be up and running. 

Manual Build   
------------

This section presents all steps to start Django Datta Able manually. 

.. code-block:: bash  

    virtualenv env                      # Create a Virtual Environment 
    source env/bin/activate             # Activate the environment 
    pip install -r requirements.txt     # Install modules 
    python manage.py makemigrations     # Migrate DataBase (generate tables) 
    python manage.py migrate            # Apply Changes on Database 

The project environment and database are ready to be used. The last thing is to start the application: 


.. code-block:: bash  

    python manage.py runserver          # Starts on default PORT 8000
    python manage.py runserver 8999     # Starts on PORT 8999 (custom port)

By default Django starts on port **8000** but this can be easily changed by adding the PORT number as argument. 
At this point, the app runs at **http://127.0.0.1:8000/**


Codebase  
--------

The project is coded using a simple and intuitive structure presented below:

- **Core**: holds the project settings 
- **Home**: the application that integrates the Datta Able Design 
- **Api**: the generated API 

.. code-block:: bash   

    < PROJECT ROOT >
      |
      |-- core/                            
      |    |-- settings.py          # Project Configuration  
      |    |-- urls.py              # Project Routing
      |    |-- views.py             # Controllers & Views
      |
      |-- api/
      |    |-- serializers.py       # Project Configuration  
      |    |-- urls.py              # Project Routing
      |
      |-- home/
      |    |-- views.py             # APP Views 
      |    |-- urls.py              # APP Routing
      |    |-- models.py            # APP Models 
      |    |-- tests.py             # Tests  
      |
      |-- templates/
      |    |-- layouts              # Master pages 
      |    |-- includes             # Components
      |    |-- pages                # Pages 
      |
      |-- requirements.txt          # Project Dependencies
      |
      |-- env.sample                # ENV Configuration (default values)
      |-- manage.py                 # Start the app - Django default start script
      |
      |-- ************************************************************************


Resources
---------

.. toctree::
   :maxdepth: 1

   source-code 
